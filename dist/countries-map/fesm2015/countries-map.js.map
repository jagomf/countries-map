{"version":3,"file":"countries-map.js","sources":["../../../projects/lib/src/lib/base-map.component.ts","../../../projects/lib/src/lib/chart-events.interface.ts","../../../projects/lib/src/lib/countries-map.component.ts","../../../projects/lib/src/lib/countries-map.module.ts","../../../projects/lib/src/countries-map.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\n\n/**\n * @private Do not use this component in your app. Use `CountriesMapComponent` instead.\n */\n@Component({\n  selector: 'countries-map-base',\n  templateUrl: './base-map.component.svg',\n  styles: ['']\n})\nexport class CountriesMapBaseComponent {\n}\n","export interface ChartSelectEvent {\n  selected: boolean;\n  value?: number;\n  country: string;\n}\n\nexport enum CharErrorCode {loading = 'loading'}\n\nexport interface ChartErrorEvent {\n  id: string | CharErrorCode;\n  message: string;\n  detailedMessage?: string;\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  EventEmitter,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { CharErrorCode } from './chart-events.interface';\nimport type { ChartSelectEvent, ChartErrorEvent } from './chart-events.interface';\nimport type { CountriesData, SelectionExtra, DrawableCountries, Selection,\n  ValidExtraData, DrawableCountry, CountryData } from './data-types.interface';\nimport { en as countriesEN } from '@jagomf/countrieslist';\nimport { scale } from 'chroma-js';\n\nconst exists = item => typeof item !== 'undefined' && item !== null;\nconst countryNum = (item: CountryData) => parseInt(item.value?.toString());\n\nconst countryClass = 'countryxx';\nconst oceanId = 'ocean';\nconst getStrokeWidth = (isHovered: boolean) => isHovered ? '0.2%' : '0.1%';\nconst getStrokeColor = (isHovered: boolean) => isHovered ? '#888' : '#afafaf';\n\nconst countryName = (countryCode: string): string => {\n  return countriesEN[countryCode];\n};\n\n@Component({\n  selector: 'countries-map',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './countries-map.component.html',\n  styleUrls: ['./countries-map.component.scss']\n})\nexport class CountriesMapComponent implements AfterViewInit, OnChanges {\n\n  @Input() data: CountriesData;\n  @Input() countryLabel = 'Country';\n  @Input() valueLabel = 'Value';\n  @Input() showCaption = true;\n  @Input() captionBelow = true;\n  @Input() minValue: number;\n  @Input() maxValue: number;\n  @Input() minColor = 'white';\n  @Input() maxColor = 'red';\n  @Input() backgroundColor = 'white';\n  @Input() noDataColor = '#CFCFCF';\n  @Input() exceptionColor = '#FFEE58';\n\n  @Output() private readonly chartReady = new EventEmitter<void>();\n  @Output() private readonly chartError = new EventEmitter<ChartErrorEvent>();\n  @Output() private readonly chartSelect = new EventEmitter<ChartSelectEvent>();\n\n  @ViewChild('mapContent', { static: false, read: ElementRef }) private readonly mapContent: ElementRef<HTMLElement>;\n\n  mapData: DrawableCountries;\n  selection: Selection | null = null;\n\n  private innerLoading = true;\n  get loading(): boolean {\n    return this.innerLoading;\n  }\n\n  get selectionValue(): ValidExtraData {\n    return this.data[this.selection.countryId].value;\n  }\n\n  constructor(\n    private readonly cdRef: ChangeDetectorRef,\n  ) { }\n\n  private getExtraSelected(country: string): SelectionExtra[] | null {\n    const { extra } = this.data[country];\n    return extra && Object.keys(extra).map(key => ({ key, val: extra[key] }));\n  }\n\n  private selectCountry(country?: string): void {\n    this.selection = country ? {\n      countryId: country,\n      countryName: countryName(country),\n      extra: this.getExtraSelected(country)\n    } : null;\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit(): void {\n    this.initializeMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const changedMapValueButNotOnStart = ['data', 'minColor', 'maxColor', 'backgroundColor', 'noDataColor', 'exceptionColor']\n      .some(attr => changes[attr] && !changes[attr].firstChange);\n\n    if (changedMapValueButNotOnStart) {\n      this.initializeMap();\n    }\n  }\n\n  private initializeMap(): void {\n    try {\n      // data is provided: might be able to paint countries in colors\n      if (this.data) {\n        // get highest value in range\n        const maxVal = exists(this.maxValue) ? this.maxValue : Object.values(this.data).reduce(\n          (acc, curr) => countryNum(curr) > acc || acc === null? countryNum(curr) : acc, null as number\n        );\n        // get lowest value in range\n        const minVal = exists(this.minValue) ? this.minValue : Object.values(this.data).reduce(\n          (acc, curr) => countryNum(curr) < acc || acc === null? countryNum(curr) : acc, null as number\n        );\n\n        // map values in range to colors\n        const valToCol = scale([this.minColor, this.maxColor]).colors((maxVal ?? 1) - (minVal ?? 0) + 1).reduce((acc, curr, i) =>\n          ({ ...acc, [i + minVal]: curr }), {} as { [key: number]: string }\n        );\n\n        // create local Map using provided data + calculated colors\n        this.mapData = Object.entries(this.data).reduce((acc, [ countryId, countryVal ]) =>\n          ({ ...acc,\n            [countryId.toLowerCase()]: {\n              ...countryVal,\n              color: valToCol[countryNum(countryVal)] // value in between minVal and maxVal\n                || (\n                  // value below minVal\n                  countryNum(countryVal) <= minVal ? valToCol[minVal] :\n                  // value above maxVal\n                  countryNum(countryVal) >= maxVal ? valToCol[maxVal]\n                  // weird; should never get to here\n                    : this.exceptionColor\n                )\n            } as DrawableCountry }),\n          {} as DrawableCountries\n        );\n\n      // no data provided: will paint plain map\n      } else {\n        this.mapData = {};\n      }\n\n      const svgMap = this.mapContent.nativeElement.children[0] as SVGSVGElement;\n      svgMap.style.backgroundColor = this.backgroundColor;\n      svgMap.querySelectorAll<SVGSVGElement>(`.${countryClass}`).forEach(item => {\n        const mapItem = this.mapData[item.id.toLowerCase()];\n        const isException = mapItem ? !exists(mapItem.value) : false;\n        item.style.fill = mapItem ? isException ? this.exceptionColor : mapItem.color : this.noDataColor;\n        item.onmouseenter = this.countryHover.bind(this, item, true);\n        item.onmouseleave = this.countryHover.bind(this, item, false);\n      });\n\n      this.innerLoading = false;\n      this.cdRef.detectChanges();\n      this.onChartReady();\n\n    } catch (e) {\n      this.onCharterror({ id: CharErrorCode.loading, message: 'Could not load' });\n    }\n  }\n\n  private countryHover(item: SVGElement, hovered: boolean): void {\n    item.style.strokeWidth = getStrokeWidth(hovered);\n    item.style.stroke = getStrokeColor(hovered);\n    item.querySelectorAll<SVGElement>('.landxx').forEach(i => {\n      i.style.strokeWidth = getStrokeWidth(hovered);\n      i.style.stroke = getStrokeColor(hovered);\n    });\n  }\n\n  private onChartReady(): void {\n    if (this.innerLoading) {\n      this.innerLoading = false;\n      this.chartReady.emit();\n    }\n  }\n\n  private onCharterror(error: ChartErrorEvent): void {\n    this.chartError.emit(error);\n  }\n\n  onMapSelect({ target }: { target?: SVGElement }): void {\n    const event: ChartSelectEvent = {\n      selected: false,\n      value: null,\n      country: null\n    };\n\n    let newItem: SVGElement;\n    if (target.id === oceanId) {\n      this.selectCountry(null);\n\n    } else {\n      newItem = target;\n      while (!newItem.classList.contains(countryClass)) {\n        newItem = newItem.parentNode as SVGElement;\n      }\n    }\n\n    const country = this.mapData[newItem?.id];\n    if (country) {\n      event.selected = true;\n      event.value = countryNum(country);\n      event.country = newItem.id.toUpperCase();\n      this.selectCountry(event.country);\n    } else {\n      this.selectCountry(null);\n    }\n    this.chartSelect.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CountriesMapBaseComponent } from './base-map.component';\nimport { CountriesMapComponent } from './countries-map.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [CountriesMapBaseComponent, CountriesMapComponent],\n  exports: [\n    CountriesMapComponent\n  ]\n})\nexport class CountriesMapModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CountriesMapBaseComponent as Éµa} from './lib/base-map.component';"],"names":["countriesEN"],"mappings":"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"}