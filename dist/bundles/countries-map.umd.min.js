!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@jagomf/countrieslist")):"function"==typeof define&&define.amd?define("countries-map",["exports","@angular/core","@angular/common","@jagomf/countrieslist"],t):t((e=e||self)["countries-map"]={},e.ng.core,e.ng.common,e.countrieslist)}(this,function(e,t,o,n){"use strict";function a(e,t,o,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(r=(i<3?a(r):i>3?a(t,o,r):a(t,o))||r);return i>3&&r&&Object.defineProperty(t,o,r),r}function i(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function r(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var n,a,i=o.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)r.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(o=i.return)&&o.call(i)}finally{if(a)throw a.error}}return r}var l=function(){function e(e){this.googleScriptLoadingNotifier=new t.EventEmitter,this.googleScriptIsLoading=!1,this.localeId=e}var o,n;return e.prototype.load=function(e){var t=this;return new Promise(function(o,n){t.loadGoogleChartsScript().then(function(){var n={packages:["geochart"],language:t.localeId,callback:o};e&&(n.mapsApiKey=e),google.charts.load("45.2",n)}).catch(function(e){return n()})})},e.prototype.loadGoogleChartsScript=function(){var e=this;return new Promise(function(t,o){if("undefined"!=typeof google&&google.charts)t();else if(e.googleScriptIsLoading)e.googleScriptLoadingNotifier.subscribe(function(e){e?t():o()});else{e.googleScriptIsLoading=!0;var n=document.createElement("script");n.type="text/javascript",n.src="https://www.gstatic.com/charts/loader.js",n.async=!0,n.defer=!0,n.onload=function(){e.googleScriptIsLoading=!1,e.googleScriptLoadingNotifier.emit(!0),t()},n.onerror=function(){e.googleScriptIsLoading=!1,e.googleScriptLoadingNotifier.emit(!1),o()},document.getElementsByTagName("head")[0].appendChild(n)}})},e=a([t.Injectable(),(o=0,n=t.Inject(t.LOCALE_ID),function(e,t){n(e,t,o)}),i("design:paramtypes",[String])],e)}();(e.CharErrorCode||(e.CharErrorCode={})).loading="loading";var c=function(e){return n.en[e]},s=function(){function o(e,o){this.el=e,this.loaderService=o,this.countryLabel="Country",this.valueLabel="Value",this.showCaption=!0,this.captionBelow=!0,this.minValue=0,this.minColor="white",this.maxColor="red",this.noDataColor="#CFCFCF",this.exceptionColor="#FFEE58",this.selection=null,this.loading=!0,this.el=e,this.loaderService=o,this.chartSelect=new t.EventEmitter,this.chartReady=new t.EventEmitter,this.chartError=new t.EventEmitter}return Object.defineProperty(o.prototype,"selectionValue",{get:function(){return this.data[this.selection.countryId].value},enumerable:!0,configurable:!0}),o.prototype.getExtraSelected=function(e){var t=this.data[e].extra;return t&&Object.keys(t).map(function(e){return{key:e,val:t[e]}})},o.prototype.selectCountry=function(e){this.selection=e?{countryId:e,countryName:c(e),extra:this.getExtraSelected(e)}:null},o.prototype.processInputData=function(){this.googleData=Object.entries(this.data).reduce(function(e,t){var o=r(t,2),n=o[0],a=o[1].value;return e.push([n,null===a?null:a?+a.toString():0]),e},[["Country","Value"]])},o.prototype.ngOnChanges=function(t){var o=this;if(t.data){if(!this.data)return;var n={colorAxis:{colors:[this.minColor,this.maxColor],minValue:Number.isInteger(this.minValue)?this.minValue:void 0,maxValue:Number.isInteger(this.maxValue)?this.maxValue:void 0},datalessRegionColor:this.noDataColor,defaultColor:this.exceptionColor,legend:this.showCaption,tooltip:{trigger:"none"}};this.loaderService.load(this.apiKey).then(function(){o.processInputData(),o.wrapper=new google.visualization.ChartWrapper({chartType:"GeoChart",dataTable:o.googleData,options:Object.assign(n,o.options)}),o.registerChartWrapperEvents(),o.redraw()},function(){o.onCharterror({id:e.CharErrorCode.loading,message:"Could not load"})})}},o.prototype.redraw=function(){this.wrapper.draw(this.el.nativeElement.querySelector("div.cm-map-content"))},o.prototype.onChartReady=function(){this.loading=!1,this.chartReady.emit()},o.prototype.onCharterror=function(e){this.chartError.emit(e)},o.prototype.onMapSelect=function(){var e={selected:!1,value:null,country:null},t=this.wrapper.visualization.getSelection();if(t.length>0){var o=t[0].row,n=this.wrapper.getDataTable();e.selected=!0,e.value=n.getValue(o,1),e.country=n.getValue(o,0),this.selectCountry(e.country)}else this.selectCountry(null);this.chartSelect.emit(e)},o.prototype.registerChartWrapperEvents=function(){var e=google.visualization.events.addListener;e(this.wrapper,"ready",this.onChartReady.bind(this)),e(this.wrapper,"error",this.onCharterror.bind(this)),e(this.wrapper,"select",this.onMapSelect.bind(this))},a([t.Input(),i("design:type",Object)],o.prototype,"data",void 0),a([t.Input(),i("design:type",String)],o.prototype,"apiKey",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"options",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"countryLabel",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"valueLabel",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"showCaption",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"captionBelow",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"minValue",void 0),a([t.Input(),i("design:type",Number)],o.prototype,"maxValue",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"minColor",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"maxColor",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"noDataColor",void 0),a([t.Input(),i("design:type",Object)],o.prototype,"exceptionColor",void 0),a([t.Output(),i("design:type",t.EventEmitter)],o.prototype,"chartReady",void 0),a([t.Output(),i("design:type",t.EventEmitter)],o.prototype,"chartError",void 0),a([t.Output(),i("design:type",t.EventEmitter)],o.prototype,"chartSelect",void 0),o=a([t.Component({selector:"countries-map",template:'<div class="major-block loading" *ngIf="loading"><span class="text">Loading map...</span></div>\n\n<div class="major-block cm-map-content" [ngClass]="{\'goes-first\': captionBelow}"></div>\n\n<div class="major-block cm-caption-container" [ngClass]="{\'goes-first\': !captionBelow}"\n  *ngIf="!loading && showCaption">\n  <div class="cm-simple-caption">\n    <div class="cm-country-label">\n      <span class="cm-default-label" *ngIf="!selection">{{countryLabel}}</span>\n      <span class="cm-country-name" *ngIf="selection">{{selection?.countryName}}</span>\n    </div>\n    <div class="cm-value-label">\n      <span class="cm-value-text"\n        [ngClass]="{\'has-value\': selection}">{{valueLabel}}<span *ngIf="selection">: </span></span>\n      <span class="cm-value-content" *ngIf="selection">{{selectionValue}}</span>\n    </div>\n  </div>\n  <div class="cm-extended-caption" *ngIf="selection?.extra && selection?.extra.length > 0">\n    <div *ngFor="let item of selection?.extra" class="cm-extended-item">\n      <span class="cm-extended-label">{{item.key}}</span>:\n      <span class="cm-extended-value">{{item.val}}</span>\n    </div>\n  </div>\n</div>\n',styles:[":host{display:flex;flex-flow:column nowrap;justify-content:space-between;align-items:stretch;align-content:stretch}.major-block.loading{flex:0 1 auto;-ms-grid-row-align:center;align-self:center}.loading .text{font-style:italic;font-family:sans-serif;color:gray}.major-block.cm-map-content{flex:0 1 auto}.major-block.goes-first{order:0}.major-block:not(.goes-first){order:1}.major-block.cm-caption-container{flex:0 1 auto;display:flex;flex-flow:column nowrap;justify-content:space-between}.cm-simple-caption{display:flex;flex-flow:row nowrap;justify-content:space-between}.cm-country-label{flex:0 1 auto;align-self:flex-start}.cm-value-label{flex:0 1 auto;align-self:flex-end}.cm-country-label,.cm-value-label{flex:0 1 auto}.cm-country-label .cm-country-name{font-weight:700}.cm-country-label .cm-country-name,.cm-value-label .cm-value-text{color:#333}.cm-country-label .cm-default-label,.cm-value-label .cm-value-text:not(.has-value){font-style:italic;color:#777}.cm-extended-caption{display:-ms-grid;display:grid;grid-template-columns:repeat(auto-fill,minmax(120px,1fr));grid-gap:5px}.cm-extended-item{margin:5px auto}.cm-extended-item .cm-extended-label{font-weight:700}"]}),i("design:paramtypes",[t.ElementRef,l])],o)}(),p=function(){function e(){}return e=a([t.NgModule({imports:[o.CommonModule],declarations:[s],entryComponents:[s],providers:[l],exports:[s]})],e)}();e.CountriesMapComponent=s,e.CountriesMapModule=p,e.Éµa=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=countries-map.umd.min.js.map